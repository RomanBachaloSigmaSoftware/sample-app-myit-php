version: '3'

services:
  nginx:
    platform: linux/amd64
    image: nginx:1.23.2-alpine
    restart: on-failure:5
    ports:
      - 80:80
    volumes:
      - ./infra/nginx/conf/local.conf:/etc/nginx/conf.d/default.conf:ro
    links:
      - frontend
      - back-php
      - back-nginx
      - back-node

  frontend:
    build:
      context: frontend/
      dockerfile: frontend.Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://localhost/api
        REACT_APP_WEB_SOCKET_URL: wss://localhost
    platform: linux/amd64
    restart: on-failure:5

  back-php:
    platform: linux/amd64
    restart: on-failure:5
    build:
      context: backend/
      dockerfile: docker/php/php.Dockerfile
    container_name: myit_php
    links:
      - mysql

  back-nginx:
    platform: linux/amd64
    restart: on-failure:5
    build:
      context: backend/
      dockerfile: docker/nginx/nginx.Dockerfile
    container_name: back-nginx
    links:
      - back-php
  
  back-node:
    restart: on-failure:5
    platform: linux/amd64
    build:
      context: backend/
      dockerfile: docker/node/node.Dockerfile
    container_name: back-node
    environment:
      - CLIENT_URL='http://localhost:3001,http://localhost:63342'
      - REDIS_PASSWORD=''
      - WEBSOCKETS_PORT='3001'
    ports:
      - 3001:3001

  redis:
    restart: on-failure:5
    platform: linux/amd64
    image: redis:latest
    container_name: myit_redis
    hostname: redis_host

  mysql:
    restart: on-failure:5
    platform: linux/amd64
    image: mysql:5.7
    hostname: database_host
    container_name: myit_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=database
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - "3310:3306"
    volumes:
      - db:/var/lib/mysql

volumes:
    db:
